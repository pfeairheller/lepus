// Objective-C API for talking to pkg/nymble Go package.
//   gobind -lang=objc pkg/nymble
//
// File is generated by gobind. Do not edit.

#ifndef __Nymble_H__
#define __Nymble_H__

@import Foundation;
#include "ref.h"
#include "Universe.objc.h"


@class NymbleAnotherStruct;
@class NymbleFoo;
@protocol NymbleEventBus;
@class NymbleEventBus;

@protocol NymbleEventBus <NSObject>
- (void)sendEvent:(NSString* _Nullable)channel message:(NSString* _Nullable)message;
@end

@interface NymbleAnotherStruct : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) NSString* _Nonnull poop;
@end

@interface NymbleFoo : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (nonnull instancetype)init;
@property (nonatomic) long bar;
@property (nonatomic) NSString* _Nonnull baz;
// skipped field Foo.Barry with unsupported type: []int

@property (nonatomic) NymbleAnotherStruct* _Nullable billy;
@end

FOUNDATION_EXPORT NSString* _Nonnull const NymbleDefaultChannel;

/**
 * Async - it's a bit hack, we return an empty string because if we don't the generated java will be
public static native void async(EventBus bus);
This means we can't use the success callback handler in Java, the callback handler allows us to
publish back to react via RCTDeviceEventEmitter

noinspection GoUnusedExportedFunction
 */
FOUNDATION_EXPORT NSString* _Nonnull NymbleAsync(id<NymbleEventBus> _Nullable bus);

FOUNDATION_EXPORT NSString* _Nonnull NymblePoop(void);

/**
 * ReturnStruct we stringify due to the restrictions in the react bridge, we'll unmarshall in JS

noinspection GoUnusedExportedFunction
 */
FOUNDATION_EXPORT NSString* _Nonnull NymbleReturnStruct(NSError* _Nullable* _Nullable error);

/**
 * ReturnWrappedValue

noinspection GoUnusedExportedFunctions
 */
FOUNDATION_EXPORT NSString* _Nonnull NymbleReturnWrappedValue(NSError* _Nullable* _Nullable error);

@class NymbleEventBus;

@interface NymbleEventBus : NSObject <goSeqRefInterface, NymbleEventBus> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
- (void)sendEvent:(NSString* _Nullable)channel message:(NSString* _Nullable)message;
@end

#endif
